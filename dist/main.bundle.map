{"version":3,"sources":["webpack:///./src/app/people/person.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/people/person-details/person-details.component.ts","webpack:///./src/app/people/person-list/person-list.component.ts","webpack:///./src/app/people/person.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/people/person-details/person-details.component.css","webpack:///./src/app/people/person-list/person-list.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/people/person-details/person-details.component.html","webpack:///./src/app/people/person-list/person-list.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Person } from './person';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class PersonService {\n    private peopleUrl = '/people';\n\n    constructor (private http: Http) {}\n\n    // get(\"/people\")\n    getPeople(): Promise<Person[]> {\n      return this.http.get(this.peopleUrl)\n                 .toPromise()\n                 .then(response => response.json() as Person[])\n                 .catch(this.handleError);\n    }\n\n    // post(\"/people\")\n    createPerson(newPerson: Person): Promise<Person> {\n      return this.http.post(this.peopleUrl, newPerson)\n                 .toPromise()\n                 .then(response => response.json() as Person)\n                 .catch(this.handleError);\n    }\n\n    // get(\"/people/:id\") endpoint not used by Angular app\n\n    // delete(\"/people/:id\")\n    deletePerson(delPersonId: String): Promise<String> {\n      return this.http.delete(this.peopleUrl + '/' + delPersonId)\n                 .toPromise()\n                 .then(response => response.json() as String)\n                 .catch(this.handleError);\n    }\n\n    // put(\"/people/:id\")\n    updatePerson(putPerson: Person): Promise<Person> {\n      var putUrl = this.peopleUrl + '/' + putPerson._id;\n      return this.http.put(putUrl, putPerson)\n                 .toPromise()\n                 .then(response => response.json() as Person)\n                 .catch(this.handleError);\n    }\n\n    private handleError (error: any) {\n      let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n      console.error(errMsg); // log to console instead\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/people/person.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 243;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 243\n// module chunks = 0","\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { PersonDetailsComponent } from './people/person-details/person-details.component';\nimport { PersonListComponent } from './people/person-list/person-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonDetailsComponent,\n    PersonListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input } from '@angular/core';\nimport { Person } from '../person';\nimport { PersonService } from '../person.service';\n\n\n@Component({\n  selector: 'person-details',\n  templateUrl: './person-details.component.html',\n  styleUrls: ['./person-details.component.css']\n})\n\nexport class PersonDetailsComponent {\n  @Input()\n  person: Person;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n  constructor (private personService: PersonService) {}\n\n  createPerson(person: Person) {\n    this.personService.createPerson(person).then((newPerson: Person) => {\n      this.createHandler(newPerson);\n    });\n  }\n\n  updatePerson(person: Person): void {\n    this.personService.updatePerson(person).then((updatedPerson: Person) => {\n      this.updateHandler(updatedPerson);\n    });\n  }\n\n  deletePerson(personId: String): void {\n    this.personService.deletePerson(personId).then((deletedPersonId: String) => {\n      this.deleteHandler(deletedPersonId);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/people/person-details/person-details.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Person } from '../person';\nimport { PersonService } from '../person.service';\nimport { PersonDetailsComponent } from '../person-details/person-details.component';\n\n@Component({\n  selector: 'person-list',\n  templateUrl: './person-list.component.html',\n  styleUrls: ['./person-list.component.css'],\n  providers: [PersonService]\n})\n\nexport class PersonListComponent implements OnInit {\n\n  people: Person[]\n  selectedPerson: Person\n\n  constructor(private personService: PersonService) { }\n\n  ngOnInit() {\n     this.personService\n      .getPeople()\n      .then((people: Person[]) => {\n        this.people = people.map((person) => {\n          return person;\n        });\n      });\n  }\n\n  private getIndexOfPerson = (personId: String) => {\n    return this.people.findIndex((person) => {\n      return person._id === personId;\n    });\n  }\n\n  selectPerson(person: Person) {\n    this.selectedPerson = person\n  }\n\n  createNewPerson() {\n    var person: Person = {\n      name: '',\n      favoriteCity: ''\n    };\n\n    // By default, a newly-created person will have the selected state.\n    this.selectPerson(person);\n  }\n\n  deletePerson = (personId: String) => {\n    var idx = this.getIndexOfPerson(personId);\n    if (idx !== -1) {\n      this.people.splice(idx, 1);\n      this.selectPerson(null);\n    }\n    return this.people;\n  }\n\n  addPerson = (person: Person) => {\n    this.people.push(person);\n    this.selectPerson(person);\n    return this.people;\n  }\n\n  updatePerson = (person: Person) => {\n    var idx = this.getIndexOfPerson(person._id);\n    if (idx !== -1) {\n      this.people[idx] = person;\n      this.selectPerson(person);\n    }\n    return this.people;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/people/person-list/person-list.component.ts","export class Person {\n  _id?: string;\n  name: string;\n  favoriteCity: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/people/person.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 357\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/people/person-details/person-details.component.css\n// module id = 358\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/people/person-list/person-list.component.css\n// module id = 359\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\n  <person-list></person-list>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 360\n// module chunks = 0","module.exports = \"<div *ngIf=\\\"person\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2 *ngIf=\\\"person._id\\\">Person Details</h2>\\n    <h2 *ngIf=\\\"!person._id\\\">New Person</h2>\\n  </div>\\n</div>\\n<div *ngIf=\\\"person\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"person-name\\\">Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"person-name\\\" [(ngModel)]=\\\"person.name\\\" placeholder=\\\"Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"person-favoriteCity\\\">Favorite City</label>\\n      <input class=\\\"form-control\\\" name=\\\"person-favoriteCity\\\" [(ngModel)]=\\\"person.favoriteCity\\\" placeholder=\\\"Favorite City\\\"/>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!person._id\\\" (click)=\\\"createPerson(person)\\\">Create</button>\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"person._id\\\" (click)=\\\"updatePerson(person)\\\">Update</button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"person._id\\\" (click)=\\\"deletePerson(person._id)\\\">Delete</button>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/people/person-details/person-details.component.html\n// module id = 361\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h2>People</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"\\n        *ngFor=\\\"let person of people\\\"\\n        (click)=\\\"selectPerson(person)\\\"\\n        [class.active]=\\\"person === selectedPerson\\\">\\n        {{person.name}}\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewPerson()\\\">New</button>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-2\\\">\\n    <person-details\\n      [person]=\\\"selectedPerson\\\"\\n      [createHandler]=\\\"addPerson\\\"\\n      [updateHandler]=\\\"updatePerson\\\"\\n      [deleteHandler]=\\\"deletePerson\\\">\\n    </person-details>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/people/person-list/person-list.component.html\n// module id = 362\n// module chunks = 0"],"sourceRoot":""}